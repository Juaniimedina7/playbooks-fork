settings:
  name: "Scan a vulnerability on a range"
  image: python
  files: false
  redacted:
    - SATORI_TOKEN
    - GITHUB_TOKEN
  example: satori run satori://scan.yml -d RANGE=0.0.0.0/0 -d PORT=80 -d SATORI_TOKEN=$SATORI_TOKEN -d GITHUB_TOKEN=$GITHUB_TOKEN --output --visibility public

install:
  - pip install git+https://github.com/satorici/cli-v2 --disable-pip-version-check --root-user-action=ignore > /dev/null
  - satori-v2 config token ${{SATORI_TOKEN}}
  - apt-get update >>/dev/null; apt-get install -qy git-lfs >>/dev/null

scan:
  - satori-v2 run satori://scan/zmap-zgrab2c.yml --count ${{SHARDS}} -d PORT=${{PORT}} -d RANGE=${{RANGE}} --files --image fedora --cpu 2048 --memory 4096

join-scans:
  - for file in *.tar.gz; do tar -Oxf $file ./zgrab2.json >> all-zgrab2.jsonl; done
  - for file in *.tar.gz; do tar -Oxf $file ./found.txt >> all-found.txt; done
  - ls -lh
  - rm *.tar.gz
  - wc -l all-found.txt; echo $(grep status.*success all-zgrab2.jsonl | wc -l) all-zgrab2.jsonl

update-blacklists:
  assertStdoutNotContains: "Push failed"
  run:
  - |
    export GIT_LFS_SKIP_SMUDGE=1
    git clone --no-checkout https://x-access-token:${{GITHUB_TOKEN}}@github.com/satorici/blacklists /tmp/blacklists
    cd /tmp/blacklists
    git sparse-checkout init --cone
    git sparse-checkout set --no-cone '/*' '.gitattributes'
    git checkout HEAD --quiet
    git fetch origin main
    git reset origin/main --mixed
    git lfs install --skip-smudge

    mkdir -p /tmp/blacklists/scan/${{RANGE}}/${{PORT}}
    mv "${OLDPWD}/all-found.txt" "/tmp/blacklists/scan/${{RANGE}}/${{PORT}}/$(date -u +%Y%m%d-%H%M).open"
    mv "${OLDPWD}/all-zgrab2.jsonl" "/tmp/blacklists/scan/${{RANGE}}/${{PORT}}/$(date -u +%Y%m%d-%H%M).banners.jsonl"

    git add --sparse .
    git -c user.name="a" -c user.email="b@c" commit -m "Range ${{RANGE}} / Port ${{PORT}} / Shards ${{SHARDS}}"

    for i in $(seq 1 10); do
      if git pull --rebase origin main && git push; then
        echo "Successful push"
        break
      else
        echo "Push rejected, retry ($i/10)..."
        sleep $(( RANDOM % 10 + 1 ))
      fi

      if [ "$i" -eq 3 ]; then
        echo "Push failed after 3 attemps"
        exit 1
      fi
    done
