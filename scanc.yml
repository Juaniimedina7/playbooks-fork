settings:
  name: "Scan for a vulnerability"
  image: python
  files: false
  redacted:
    - SATORI_TOKEN
    - GITHUB_TOKEN
  example: satori run satori://scan.yml -d RANGE=0.0.0.0/0 -d PORT=80 -d SATORI_TOKEN=$SATORI_TOKEN -d GITHUB_TOKEN=$GITHUB_TOKEN --output --visibility public

install:
  - pip install git+https://github.com/satorici/cli-v2 --disable-pip-version-check --root-user-action=ignore > /dev/null
  - satori-v2 config token ${{SATORI_TOKEN}}
  - apt-get update >>/dev/null; apt-get install -qy git-lfs >>/dev/null

scan:
  - satori-v2 run satori://scan/zmap-zgrab2c.yml --count ${{SHARDS}} -d PORT=${{PORT}} -d RANGE=${{RANGE}} --files --image fedora --cpu 2048 --memory 4096

join-scans:
  - for file in *.tar.gz; do tar -Oxf $file ./zgrab2.json >> all-zgrab2.jsonl; done
  - for file in *.tar.gz; do tar -Oxf $file ./found.txt >> all-found.txt; done
  - rm *.tar.gz
  - wc -l all-found.txt; echo $(grep status.*success all-zgrab2.jsonl | wc -l) all-zgrab2.jsonl

update-blacklists:
  - cd /tmp; git clone --no-checkout --depth 1 https://x-access-token:${{GITHUB_TOKEN}}@github.com/satorici/blacklists; cd blacklists; git sparse-checkout init --cone; git sparse-checkout set --no-cone /*; git read-tree -mu HEAD # Esto preserva el estado actual, sin descargar archivos.
  - ls -lh
  - mkdir -p /tmp/blacklists/${{RANGE}}/${{PORT}}; mv all-found.txt /tmp/blacklists/${{RANGE}}/${{PORT}}/$(date -u +%Y%m%d-%H%M).open; mv all-zgrab2.jsonl /tmp/blacklists/${{RANGE}}/${{PORT}}/$(date -u +%Y%m%d-%H%M).banners.jsonl
  - 'cd /tmp/blacklists; git fetch origin main; git reset --soft origin/main; git add --sparse .; git -c user.name="a" -c user.email="b@c" commit -m "Range: ${{RANGE}} / Port: ${{PORT}} / Shards: ${{SHARDS}}"; git pull --rebase origin main; git push'
